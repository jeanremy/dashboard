{% extends 'FlydDashboardBundle::layout.html.twig' %}

{% block title %}
    <title>{{entity.name}} - Edit </title>
{% endblock %}

{% block body -%}
    
    <h1 class="lvl1">{{entity.name}}</h1>

    {{ form_start(form, {'attr': {'class': 'form-horizontal'}}) }}

	{% if form_errors(form) %}
	<div class="row">
		<div class="col-sm-12">
			<div class="bloc">
    			{{ form_errors(form) }}
			</div>
		</div>
	</div>
	{% endif %}

    <div class="row">
        <div class="col-sm-12">
            <div class="bloc bloc--general edit">
                <h2 class="bloc__title">Informations générales</h2>

                <div class="form-group">
                	{{ form_label(form.name, "Nom", {'label_attr': {'class': 'control-label'}}) }}

					{{ form_errors(form.name) }}

					<div class="data">
						{# Génération de l'input. #}
						{{ form_widget(form.name, {'attr': {'class': 'form-control'}}) }}
					</div>
                </div>

                <div class="form-group">
                	{{ form_label(form.entrance, "Date d'entrée", {'label_attr': {'class': 'control-label'}}) }}

					{{ form_errors(form.entrance) }}

					<div class="data">
						{# Génération de l'input. #}
						{{ form_widget(form.entrance, {'attr': {'class': 'form-control'}}) }}
					</div>
                </div>

                <div class="form-group">
                	{{ form_label(form.reminder, "Date de relance", {'label_attr': {'class': 'control-label'}}) }}

					{{ form_errors(form.reminder) }}

					<div class="data">
						{# Génération de l'input. #}
						{{ form_widget(form.reminder, {'attr': {'class': 'form-control'}}) }}
					</div>
                </div>

                <div class="form-group">
                	{{ form_label(form.type, "Type de client", {'label_attr': {'class': 'control-label'}}) }}

					{{ form_errors(form.type) }}

					<div class="data">
						{# Génération de l'input. #}
						{{ form_widget(form.type, {'attr': {'class': 'form-control'}}) }}
					</div>
                </div>
            </div>
        </div>
    </div>


     <!-- Contacts -->
    <div class="row">
        <div class="col-sm-12">
            <div class="bloc">
                <h2 class="bloc__title">Contacts</h2>
                <div class="row">
                    {% for contact in entity.contacts %}
                    <div class="col-sm-3 contact">
                        <p class="contact__title">{{ contact.firstname }} {{ contact.lastname }}</p>
                        <p class="contact__job">{{ contact.job }}</p>
                        <p class="contact__email">{{ contact.email }}</p>
                        <p class="contact__phone">{{ contact.phone }}</p>
                        <p class="contact__mobile">{{ contact.mobile }}</p>
                        <a class="remove" data-id="{{ contact.id }}">Retirer</a>
                    </div>
                    {% endfor %}
                </div> 
                <a href="#" class="pull-right btn btn--add">+</a>             
            </div>
        </div>
    </div>

	{# Pour le bouton, pas de label ni d'erreur, on affiche juste le widget #}
	{{ form_widget(form.save) }}

	{# Génération automatique des champs pas encore écrits.
	Dans cet exemple, ce serait le champ CSRF (géré automatiquement par Symfony !)
	et tous les champs cachés (type « hidden »). #}
	{{ form_rest(form) }}

	{# Fermeture de la balise <form> du formulaire HTML #}
	{{ form_end(form) }}

{% endblock %}

{% block js %}
<script type="text/javascript">
  $(document).ready(function() {
    // On récupère la balise <div> en question qui contient l'attribut « data-prototype » qui nous intéresse.
    var $container = $('#flyd_dashboardbundle_client_contacts');

    // On ajoute un lien pour ajouter une nouvelle catégorie
    var $addLink = $('<a href="#" id="add_contact" class="btn btn-default">Ajouter une catégorie</a>');
    $container.append($addLink);

    // On ajoute un nouveau champ à chaque clic sur le lien d'ajout.
    $addLink.click(function(e) {
      addContact($container);
      e.preventDefault(); // évite qu'un # apparaisse dans l'URL
      return false;
    });

    // On définit un compteur unique pour nommer les champs qu'on va ajouter dynamiquement
    var index = $container.find(':input').length;

    // On ajoute un premier champ automatiquement s'il n'en existe pas déjà un (cas d'une nouvelle annonce par exemple).
    if (index == 0) {
      addContact($container);
    } else {
      // Pour chaque catégorie déjà existante, on ajoute un lien de suppression
      $container.children('div').each(function() {
        addDeleteLink($(this));
      });
    }

    // La fonction qui ajoute un formulaire Categorie
    function addContact($container) {
      // Dans le contenu de l'attribut « data-prototype », on remplace :
      // - le texte "__name__label__" qu'il contient par le label du champ
      // - le texte "__name__" qu'il contient par le numéro du champ
      var $prototype = $($container.attr('data-prototype').replace(/__name__label__/g, 'Catégorie n°' + (index+1))
          .replace(/__name__/g, index));

      // On ajoute au prototype un lien pour pouvoir supprimer la catégorie
      addDeleteLink($prototype);

      // On ajoute le prototype modifié à la fin de la balise <div>
      $container.append($prototype);

      // Enfin, on incrémente le compteur pour que le prochain ajout se fasse avec un autre numéro
      index++;
    }

    // La fonction qui ajoute un lien de suppression d'une catégorie
    function addDeleteLink($prototype) {
      // Création du lien
      $deleteLink = $('<a href="#" class="btn btn-danger">Retirer</a>');

      // Ajout du lien
      $prototype.append($deleteLink);

      // Ajout du listener sur le clic du lien
      $deleteLink.click(function(e) {
        $prototype.remove();
        e.preventDefault(); // évite qu'un # apparaisse dans l'URL
        return false;
      });
    }
  });
</script>
{% endblock %}
